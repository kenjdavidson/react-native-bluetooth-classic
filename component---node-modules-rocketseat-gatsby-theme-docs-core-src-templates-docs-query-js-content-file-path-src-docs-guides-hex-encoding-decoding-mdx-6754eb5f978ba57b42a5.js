"use strict";(self.webpackChunkreact_native_bluetooth_classic_docs=self.webpackChunkreact_native_bluetooth_classic_docs||[]).push([[98],{6343:function(e,t,n){n.d(t,{Z:function(){return v}});var a=n(7294),l=n(755),o=n(9029),i=n(4160),c=n(5434),r=n(4316);const s=(0,r.Z)("section",{target:"e1jikabl1"})({name:"ns1hxi",styles:"display:flex;justify-content:space-between;align-items:center;padding:48px 0;width:100%;@media (max-width: 780px){flex-direction:column;}"}),h=(0,r.Z)("div",{target:"e1jikabl0"})("transition:all 200ms;",(e=>{let{isLeft:t}=e;return!t&&"margin-left: auto;"})," a{display:flex;text-decoration:none;justify-content:center;align-items:center;width:100%;height:100%;svg{width:25px;height:25px;color:",(e=>{let{theme:t}=e;return t.colors.text}),";",(e=>{let{isLeft:t}=e;return t?"margin-right: 16px":"margin-left: 16px"}),";}p{letter-spacing:0.142em;text-transform:uppercase;font-size:12px;margin:0;color:",(e=>{let{theme:t}=e;return t.colors.text}),";}h3{color:",(e=>{let{theme:t}=e;return t.colors.text}),";border:none;margin:0;padding:0;font-size:16px;}}&:hover{opacity:0.8;a svg{opacity:0.8;}}@media (max-width: 780px){width:100%;",(e=>{let{isLeft:t}=e;return t&&"margin-bottom: 16px"}),";a{justify-content:",(e=>{let{isLeft:t}=e;return t?"flex-start":"flex-end"}),";}}");var d=n(917);function u(e){let{prev:t,next:n}=e;return(0,d.tZ)(s,null,t&&(0,d.tZ)(h,{isLeft:!0},(0,d.tZ)(i.Link,{to:t.link},(0,d.tZ)(c.sG8,null),(0,d.tZ)("div",null,(0,d.tZ)("p",null,"Prev"),(0,d.tZ)("h3",null,t.label)))),n&&(0,d.tZ)(h,null,(0,d.tZ)(i.Link,{to:n.link},(0,d.tZ)("div",null,(0,d.tZ)("p",null,"Next"),(0,d.tZ)("h3",null,n.label)),(0,d.tZ)(c.AeI,null))))}u.defaultProps={prev:null,next:null};var m=n(9674);function p(e){let{repositoryEditUrl:t,repositoryProvider:n}=e;const a=(0,m.u)();return t?(0,d.tZ)("a",{href:t,target:"_blank",rel:"noopener noreferrer",css:(0,d.iv)("display:flex;align-items:center;text-decoration:none;margin-top:48px;color:",a.colors.text,";opacity:0.8;font-size:14px;font-weight:normal;","")},(0,d.tZ)(c.zmo,{style:{marginRight:"5px"}}),"Edit this page on ",n):null}function g(e){let{mdx:t,pageContext:n,children:i}=e;const{prev:c,next:r,repositoryEditUrl:s,repositoryProvider:h}=n,{title:m,description:g,image:v,disableTableOfContents:f}=t.frontmatter,{headings:b}=t,{slug:E}=t.fields;return(0,d.tZ)(a.Fragment,null,(0,d.tZ)(o.Z,{title:m,description:g,slug:E,image:v}),(0,d.tZ)(l.Z,{disableTableOfContents:f,title:m,headings:b},i,(0,d.tZ)(p,{repositoryEditUrl:s,repositoryProvider:h}),(0,d.tZ)(u,{prev:c,next:r})))}function v(e){let{data:{mdx:t},pageContext:n,children:a}=e;return(0,d.tZ)(g,{mdx:t,pageContext:n},a)}p.defaultProps={repositoryEditUrl:null,repositoryProvider:null}},7083:function(e,t,n){n.r(t),n.d(t,{default:function(){return r}});var a=n(7294),l=n(1151);function o(e){const t=Object.assign({p:"p",ul:"ul",li:"li",a:"a",h2:"h2",span:"span",pre:"pre",code:"code",h3:"h3",h4:"h4",blockquote:"blockquote"},(0,l.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(t.p,null,"The largest number of issues and forks are created around how to change the encoding/decoding of message data when communicating with the device.  Some examples of this are:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"Reading HEX data ",a.createElement(t.a,{href:"https://github.com/kenjdavidson/react-native-bluetooth-classic/issues/50"},"https://github.com/kenjdavidson/react-native-bluetooth-classic/issues/50")),"\n",a.createElement(t.li,null,"Sending HEX data ",a.createElement(t.a,{href:"https://github.com/kenjdavidson/react-native-bluetooth-classic/issues/51"},"https://github.com/kenjdavidson/react-native-bluetooth-classic/issues/51")),"\n"),"\n",a.createElement(t.p,null,"which have been solved by the community.  One of the most important features was the ability for you to create and customize these within your own application, without needing to fork/modify/install locally the project.  The following describes how to implement the request from issues 50 and 51 in order to work with HEX data."),"\n",a.createElement(t.h2,{id:"installation",style:{position:"relative"}},a.createElement(t.a,{href:"#installation","aria-label":"installation permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Installation"),"\n",a.createElement(t.p,null,"First thing first, you need to grab the latest version:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-shell"},"npm install --save react-native-bluetooth-classic\n")),"\n",a.createElement(t.h2,{id:"android",style:{position:"relative"}},a.createElement(t.a,{href:"#android","aria-label":"android permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Android"),"\n",a.createElement(t.p,null,"Next you'll want to sanity check that things are working.  Once you've installed and run/sync Gradle you should have the ",a.createElement(t.code,null,"PackageList")," class generated and containing the ",a.createElement(t.code,null,"RNBluetoothClassicPackage"),"."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-java"},"// com.facebook.react.PackageList\n\n  public ArrayList<ReactPackage> getPackages() {\n    return new ArrayList<>(Arrays.<ReactPackage>asList(\n      new MainReactPackage(),\n      new RNBluetoothClassicPackage()\n    ));\n  }\n")),"\n",a.createElement(t.h3,{id:"create-your-implementations",style:{position:"relative"}},a.createElement(t.a,{href:"#create-your-implementations","aria-label":"create your implementations permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Create your Implementations"),"\n",a.createElement(t.p,null,"There are a number of custom classes that are required, I'm not entirely happy with it as is, but it works and can be further absracted for a future release.  This assumes that the ",a.createElement(t.code,null,"rfcomm")," connector/acceptor are going to be used to perform connections.  This means we only need to:"),"\n",a.createElement(t.h4,{id:"implement-deviceconnection",style:{position:"relative"}},a.createElement(t.a,{href:"#implement-deviceconnection","aria-label":"implement deviceconnection permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Implement ",a.createElement(t.code,null,"DeviceConnection")),"\n",a.createElement(t.p,null,"Since we're not changing how the device communicates, only how the incoming and outgoing data is encoded/decoded, we should just need to extend the ",a.createElement(t.code,null,"AbstractDeviceConnection")," and override the required methods.  Since Hex data is more of a stream, we don't need to worry about the deliminater."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-java"},'// com.example.bluetooth.conn.HexStreamDeviceConnectionImpl extends AbstractDeviceConnection\n\nprivate static final char[] HEX_ARRAY = "0123456789ABCDEF".toCharArray();\n\n/**\n * Incoming bytes are in hex form, they need to be \n */\n@Override\nprotected void receivedData(byte[] bytes) {\n  char[] hexChars = new char[bytes.length * 2];\n  for (int j = 0; j < bytes.length; j++) {\n    int v = bytes[j] & 0xFF;\n    hexChars[j * 2] = HEX_ARRAY[v >>> 4];\n    hexChars[j * 2 + 1] = HEX_ARRAY[v & 0x0F];\n  }\n\n  String data = new String(hexChars);\n  \n  // Add them to the buffer or send directly to the onReceivedData listener based on\n  // the requirements.  Most likely the latter.\n}\n')),"\n",a.createElement(t.blockquote,null,"\n",a.createElement(t.p,null,"Don't forget to do the Accept ",a.createElement(t.code,null,"DeviceConnection")," if you're going to need a server connection."),"\n"),"\n",a.createElement(t.h4,{id:"implement-deviceconnectionfactory",style:{position:"relative"}},a.createElement(t.a,{href:"#implement-deviceconnectionfactory","aria-label":"implement deviceconnectionfactory permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Implement ",a.createElement(t.code,null,"DeviceConnectionFactory")),"\n",a.createElement(t.p,null,"If your ",a.createElement(t.code,null,"DeviceConnection")," requires some configuration or logic, you may want to create your own ",a.createElement(t.code,null,"DeviceConnectionFactory")," to perform that logic.  Otherwise you can just lambda it up during configuration."),"\n",a.createElement(t.h4,{id:"implement-rnbluetoothclassicpackage",style:{position:"relative"}},a.createElement(t.a,{href:"#implement-rnbluetoothclassicpackage","aria-label":"implement rnbluetoothclassicpackage permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Implement ",a.createElement(t.code,null,"RNBluetoothClassicPackage")),"\n",a.createElement(t.p,null,"Finally you'll need to customize the package so that you create the appropriate ",a.createElement(t.code,null,"RNBluetoothClassicModule"),".  This isn't needed, but it makes life a lot simpler when working on the next step."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-java"},"public abstract class CustomBluetoothPackage {\n  public static RNBluetoothClassicPackage PACKAGE = RNBluetoothClassicPackage.DEFAULT_BUILDER\n    .withConnectionFactory('hex', () -> new HexStreamDeviceConnectionImpl())  // Does not override 'delimited' so it's also available as a CONNECTION_TYPE\n    .build();\n}\n")),"\n",a.createElement(t.blockquote,null,"\n",a.createElement(t.p,null,"It's wise to start with ",a.createElement(t.code,null,"RNBluetoothClassicPackage.DEFAULT_BUILDER")," if you're not changing the connectors/acceptors."),"\n"),"\n",a.createElement(t.h3,{id:"react-native-modules",style:{position:"relative"}},a.createElement(t.a,{href:"#react-native-modules","aria-label":"react native modules permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"React Native Modules"),"\n",a.createElement(t.p,null,"Once we have the ",a.createElement(t.code,null,"DeviceConnection"),"(s) and possibly ",a.createElement(t.code,null,"DeviceConnectionFactory"),"(s) we need to inform pass these into the ",a.createElement(t.code,null,"RNBluetoothClassicModule"),".  This can be done in a number of ways:"),"\n",a.createElement(t.h4,{id:"customize-auto-linking",style:{position:"relative"}},a.createElement(t.a,{href:"#customize-auto-linking","aria-label":"customize auto linking permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Customize Auto Linking"),"\n",a.createElement(t.p,null,"The preferred method (from React Native) is to provide a ",a.createElement(t.code,null,"react-native.config.js")," file which customizes the ",a.createElement(t.code,null,"react-native-bluetooth-classic")," dependency configuration.  For this to work (easily) you'll need to create your own ",a.createElement(t.code,null,"ReactPackage")," that builds the appropriate ",a.createElement(t.code,null,"RNBluetoothClassicModule")," and then tell auto linking to use it:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-javascript"},"// react-native.config.js\n// This file must be added setting android to null so that auto linking is skipped\nmodule.exports = {\n  dependencies: {\n    'react-native-bluetooth-classic': {\n      platforms: {\n        android: {\n          packageImportPath: 'import com.example.bluetooth.CustomBluetoothPackage;',\n          packageInstance: 'CustomBluetoothPackage.PACKAGE'\n        }\n      }\n    }\n  }\n}\n")),"\n",a.createElement(t.h4,{id:"skip-auto-linking-completely",style:{position:"relative"}},a.createElement(t.a,{href:"#skip-auto-linking-completely","aria-label":"skip auto linking completely permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Skip Auto Linking Completely"),"\n",a.createElement(t.p,null,"You can skip auto linking completely by nulling out the Android dependency:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-javascript"},"// react-native.config.js\n// This file must be added setting android to null so that auto linking is skipped\nmodule.exports = {\n  dependencies: {\n    'react-native-bluetooth-classic': {\n      platforms: {\n        android: null\n      }\n    }\n  }\n}\n")),"\n",a.createElement(t.p,null,"and then manually adding the custom package to React Native:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-java"},'// MainApplication.java \n@Override\nprotected List<ReactPackage> getPackages() {\n  @SuppressWarnings("UnnecessaryLocalVariable")\n  List<ReactPackage> packages = new PackageList(this).getPackages();\n  // Packages that cannot be autolinked yet can be added manually here, for example:\n  packages.add(CustomBluetoothPackage.PACKAGE)\n  return packages;\n}\n')),"\n",a.createElement(t.h2,{id:"ios",style:{position:"relative"}},a.createElement(t.a,{href:"#ios","aria-label":"ios permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"IOS"),"\n",a.createElement(t.p,null,"IOS has not currently been updated to use new ",a.createElement(t.code,null,"DeviceConnection"),"."))}var i=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,l.ah)(),e.components);return t?a.createElement(t,e,a.createElement(o,e)):o(e)},c=n(6343);function r(e){return a.createElement(c.Z,e,a.createElement(i,e))}c.Z}}]);
//# sourceMappingURL=component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js-content-file-path-src-docs-guides-hex-encoding-decoding-mdx-6754eb5f978ba57b42a5.js.map